# Задача №3: Реализуйте RLE алгоритм: реализуйте модуль сжатия и восстановления данных.
# stroka = "aaabbbbccbbb"
# ....
# stroka = "3a4b2c3b"
# Входные данные хранятся в отдельных текстовых файлах.

print("-" * 22)
print('Алгоритм сжатия:')
print("-" * 22)
with open("text.txt", "r") as f:
    text = f.read()
    print('Первоначальная строка: ', text)
    
code = ''                                                    # создаем пустую строку, для сохранения результата
i = 0
while i < len(text):                               
    count = 1                                                # подсчитываем количество вхождений символа в индексе `i`
    while i + 1 < len(text) and text[i] == text[i + 1]:      # условие: если след.индекс меньше размера строки и если элемент равен следующему элементу
        count = count + 1                                    # увеличиваем счетчик
        i = i + 1                                            # переходим к следующему индексу
    code += str(count) + text[i]                             # добавляем в итоговую строку количество вхождений и текущий символ 
    i = i + 1
print('Cтрока после сжатия: ', code)
print("-" * 22)


print("-" * 22)
print('Алгоритм восстановлени данных:')
print("-" * 22)
with open("text2.txt", "r") as f:
    text2 = f.read()
    print('Первоначальная строка: ', text2)

count = ''
decode = ''                                                 # создаем пустую строку, для сохранения результата
for i in text2:
    if i.isdigit():                                         # если элемент списка является числом, то записываем его в count
        count += i 
    else:
        decode += i * int(count)                            # если нет, то умножаем переменную списка на count
        count = ''
print('Cтрока после восстановления: ', decode)
print("-" * 22)













